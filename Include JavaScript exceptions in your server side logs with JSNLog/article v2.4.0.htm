
<h2>Introduction</h2>
<p>
    <a href="http://jsnlog.com">JSNLog</a> is a logging package, similar to Log4Net, NLog, Elmah, etc.
    However, instead of server side events (in your C# or VB code), it logs events that happen in your JavaScript. 
    It transfers this log data from the client to the server and logs it in your server logs.
    </p>
<p>
     <a href="http://www.nuget.org/packages/JSNLog">NuGet installation</a>: 
    </p>
<p>
    </p><pre>Install-Package JSNLog</pre>
<p />


<p>
    It has 2 components:
</p>
<ul>
    <li>
        The <strong>client side logging component</strong> jsnlog.js has JavaScript logging methods, so your JavaScript code can log events.
    It sends these to the server using AJAX. 
        <p />
    </li>
    <li>
       The <strong>server side component</strong> receives the log messages from the client.
        It then passes them on to your
    server side logging package, to store in your server side log.
        <p />
        It also lets you configure your client side loggers in your server side web.config.
    </li>
</ul>    
<p>
    JSNLog assumes you already have installed server side logging. It simply passes the client side log messages on to your 
    server side logging package, so client side log messages go to the same logs as your server side log messages. 
    It will interface    
    with Log4Net, NLog, Elmah and 
    Common.Logging.  
</p>


<h2>Why and how</h2>

<h3>
    Your web site consists of C#/VB code running on the server, and JavaScript running on the browser.
</h3>
<img src="jsnlog-candjs.png" />

<h3>
    When an exception happens in your C#/VB code, you log it, so you can fix the bug.
</h3>
<p>
    Using your server side logging package, such as Log4Net, NLog or Elmah, with loggers configured via web.config. 
</p>

<pre>try
{
    ....
}
catch (Exception e)
{
    ILog log = LogManager.GetLogger(&quot;serverlogger&quot;);
    log.Fatal(e.ToString());
}</pre>

<img src="jsnlog-logc.png" />

<h3>
But what about exceptions in your JavaScript code?
</h3>
<pre>try
{
    ....
}
catch(err)
{
    ????
}
</pre>
<img src="jsnlog-logjs.png" />

<h3>
Log the JavaScript exception on the client with JSNLog, which sends it to the server.
</h3>
<p>
     JSNLog will pass the client side log message on to your server side logging package, 
    so it winds up in your server side logs. Configure your client side loggers in web.config.
    </p>
<pre>try
{
    ....
}
catch(err)
{
    JL(&quot;jsLogger&quot;).fatal(err.message);
}
</pre>
<img src="jsnlog-solution.png" />


<h2>Benefits</h2>


<ul>
    <li>
        Extensive <a href="http://jsnlog.com">documentation</a>. Easy to install.
    </li>
    <li>
        No need to pay fees to a third party logging service.
    </li>
    <li>
Client side log messages go into the same logs as your server side log messages.
    </li>
    <li>
        Find out which client side log messages and server side log messages were generated as part of the same web request through request ids.
    </li>
    <li>
        Configure JavaScript loggers in your web.config.
    </li>
    <li>
        Prevent flooding your server by limiting number of log messages sent per page load.
    </li>
    <li>
        Send client side log messages in batches of 2 or more for greater efficiency.
    </li>
    <li>
        Enable logging only for browsers that give you problems, such as IE 8.
    </li>

    <li>
        Log objects as well as strings.
    </li>
    <li>
        Suppress messages that match a regular expression. Alows you to suppress errors generated by third party code.
    </li>
<li>
Suppress log messages that are (almost) the same as a previous message, to prevent duplicates.    
</li>
    <li>
        Buffer trace messages on the client and only send them when a fatal message is sent.
        Lets you find out what happened before an exception, but only if there actually is an exception.
    </li>

</ul>

<h2>Next step</h2>

<ul>
    <li>
        Install JSNLog via NuGet (<a href="http://www.nuget.org/packages/JSNLog/">how</a>):
        <p>
        <pre>Install-Package JSNLog</pre>
        </p>
    </li>
    <li>
    Full documentation and installation instructions are on the 
    <a href="http://jsnlog.com">JSNLog website</a>.
    </li>
</ul>

<p>
    If you like this article, please vote for it.
</p>



